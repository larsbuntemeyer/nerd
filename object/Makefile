#  Makefile for FLASH code.  Automatically generated by setup script.
#  Do not edit!

EXE = nerd2

default : $(EXE)

#	Machine-dependent include file

CDEFINES =  -DN_DIM=2 -DMAXBLOCKS=1000 -DNXB=8 -DNYB=8 -DNZB=1
FDEFINES = $(MDEFS)-DN_DIM=2 $(MDEFS)-DMAXBLOCKS=1000 $(MDEFS)-DNXB=8 $(MDEFS)-DNYB=8 $(MDEFS)-DNZB=1 

#	print the compiler flags to file in FLASH/object/
#	(files name are also hard-coded into source/util/tools/compiler_flags.c)
PRINT_F_FLAGS = $(ECHO) $(FCOMP) $(FFLAGS) $(FDEFINES) > f_compiler_flags
PRINT_C_FLAGS = $(ECHO) $(CCOMP) $(CFLAGS) $(CDEFINES)  > c_compiler_flags
PRINT_LFLAGS = $(ECHO) $(LFLAGS) > loader_flags

include Makefile.h



#	Compile



.SUFFIXES:

.SUFFIXES: .f .F .f90 .F90 .c .C .o
  
.f.o :
	$(FCOMP) $(FFLAGS) $(FDEFINES) $*.f
.F.o :
	$(FCOMP) $(FFLAGS) $(FDEFINES) $*.F
.f90.o :
	$(FCOMP) $(FFLAGS) $(f90FLAGS) $(FDEFINES) $*.f90
.F90.o :
	$(FCOMP) $(FFLAGS) $(F90FLAGS) $(FDEFINES) $*.F90
.c.o :
	$(CCOMP) $(CFLAGS) $(CDEFINES) $*.c
.C.o :
	$(CPPCOMP) $(CFLAGS) $(CDEFINES) $*.C
%API.c %API.h %API-bridges.F90: %.int
	./int2API.py $<

.PRECIOUS: %API.c %API.h %API-bridges.F90

# Note, the tmpfiles are needed to ensure that the following routines
# get recompiled every time.  Parallel builds (e.g. gmake -j 4) complicate
# this process, by requiring that the source (e.g. buildstamp.f) is generated
# by the same set of rules (and therefore same process) as the object file

#       Buildstamp routine

buildstamp.o : .buildstamp_tmpfile
	./make_bstamp
	$(FCOMP) $(FFLAGS) buildstamp.f
#	$(RM) buildstamp.f
	$(RM) .buildstamp_tmpfile

.buildstamp_tmpfile :
	touch .buildstamp_tmpfile


#       Release routine

nerd_release.o : .nerd_release_tmpfile
	./make_release
	$(FCOMP) $(FFLAGS) nerd_release.f
	$(RM) nerd_release.f
	$(RM) .nerd_release_tmpfile

.nerd_release_tmpfile :
	touch .nerd_release_tmpfile

#       Build statistics routine

buildstats.o : .buildstats_tmpfile
	$(PRINT_F_FLAGS)
	$(PRINT_C_FLAGS)
	$(PRINT_LFLAGS)
	./make_bstats
	$(FCOMP) $(FFLAGS) $(F90FLAGS) buildstats.F90
#	$(RM) buildstats.F90
	$(RM) .buildstats_tmpfile

.buildstats_tmpfile :
	touch .buildstats_tmpfile


#       FLASH Modules routine

nerdModules.o : 
	./make_nerdModules
	$(FCOMP) $(FFLAGS) $(F90FLAGS) nerdModules.F90
	$(RM) nerdModules.F90


#	Module Makefiles

include Makefile.Database
include Makefile.Driver
include Makefile.Grid
include Makefile.Main
include Makefile.RuntimeParameters
include Makefile.physics

MODS = \
       $(Database) \
       $(Driver) \
       $(Grid) \
       $(Main) \
       $(RuntimeParameters) \
       $(physics) \
       $(MACHOBJ) buildstamp.o nerd_release.o buildstats.o nerdModules.o 

#	Link

$(EXE) : $(MODS)
	$(LINK) $(LFLAGS) $(EXE) $(MODS) $(LIB) $(CONFIG_LIB)
	$(ECHO) SUCCESS

#	Clean up object directory

clean :
	$(RM) *.o *.a *.mod *API.h *API.c *API-bridges.F90

precision_test : precision_test.o
	$(LINK) $(LFLAGS) precision_test precision_test.o
